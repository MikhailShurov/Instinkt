version: "3.8"
services:
  db:
    image: postgres:16
    container_name: postgres
    volumes:
      - postgres_data:/var/lib/postgresql/data
    env_file:
      - ./.env
    ports:
      - "5432:5432"
    environment:
      POSTGRES_PASSWORD: ${DB_PASS}
      POSTGRES_USER: ${DB_USER}
      POSTGRES_DB: ${DB_NAME}
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U ${DB_USER}"]
      interval: 10s
      timeout: 5s
      retries: 5

  elasticsearch:
    image: elasticsearch:7.16.1
    container_name: elasticsearch
    volumes:
      - ./elasticsearch/config.yml:/usr/share/elasticsearch/config/elasticsearch.yml:ro
    env_file:
      - ./.env
    environment:
      discovery.type: single-node
      ELASTIC_USERNAME: "elastic"
      ELASTIC_PASSWORD: "iIFgBbdZ8paETvHyRQzu"
    ports:
      - "9200:9200"
    healthcheck:
      test: ["CMD-SHELL", "curl --silent --fail http://localhost:9200"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: "redis:alpine"
    container_name: redis
    ports:
      - "6379:6379"
    healthcheck:
      test: ["CMD-SHELL", "redis-cli ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  app:
    build:
      context: .
    container_name: api
    ports:
      - "8000:8000"
    env_file:
      - ./.env
    depends_on:
      - db
      - elasticsearch
      - redis
    command: [ "/app/scripts/app.sh" ]

volumes:
  postgres_data:
